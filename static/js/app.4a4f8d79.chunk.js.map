{"version":3,"sources":["src/util.js","src/content/songs/SongButton.js","src/content/ContentList.js","src/content/songs/AllSongs.js","src/menu/songsButton.js","src/content/albums/AlbumButton.js","src/content/albums/songsByAlbum.js","src/content/albums/AllAlbums.js","src/menu/albumButton.js","src/content/artists/ArtistButton.js","src/content/artists/OneArtist.js","src/content/artists/AllArtists.js","src/menu/artistButton.js","App.js"],"names":["request","params","url","includes","api_url","fetch","sortedAlpha","items","alpha","sorted","sort","a","b","name","split","forEach","letter","item","toLowerCase","push","id","cover","artist","SongButton","props","song","this","TouchableOpacity","View","style","styles","border","Text","numberOfLines","songList","React","Component","StyleSheet","create","fontSize","fontWeight","marginLeft","paddingTop","paddingBottom","borderTopWidth","borderColor","ContentList","list","key","letterTag","toUpperCase","backgroundColor","color","paddingLeft","borderStyle","SongContent","data","type","updateDisplay","content","length","map","SongsButton","handlePress","bind","then","res","json","Songs","AllSongs","catch","err","console","log","onPress","AlbumButton","album_id","async","album","songs","getSongs","button","Image","source","uri","display","flexDirection","width","height","textAlignVertical","margin","AllAlbums","albumList","Albums","ArtistButton","Album","albumId","getAlbums","artistList","ArtistContent","state","Artists","AllArtists","App","displayContent","arg","setState","contentType","ok","container","ScrollView","contentHeader","menu","flex","justifyContent","marginBottom","position","bottom","alignItems","textAlign"],"mappings":"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","file":"static/js/app.4a4f8d79.chunk.js","sourcesContent":["export function request(params) {\n    const endpoints = ['albums', 'artists', 'songs'];\n    let url;\n\n    if (endpoints.includes(params)) url = `${api_url}/${params}`;\n    else  url = api_url;\n\n    const promise = fetch(url);\n\n    return promise;\n}\n\nexport function sortedAlpha(items) {\n    const alpha = {};\n    const sorted = items.sort((a, b) => (a.name > b.name) ? 1 : -1);\n\n    'abcdefghijklmnopqrstuvwxyz'.split('').forEach(\n        letter => {\n            alpha[letter] = [] ;\n        }\n    );\n\n    sorted.forEach(\n        item => {\n            const letter = item.name[0].toLowerCase();\n            alpha[letter].push({\n                id: `${item.id}`,\n                name: `${item.name}`,\n                cover: `${item.cover}`,\n                artist: `${item.artist}`\n            })\n        }\n    );\n\n    return alpha;\n}\n\nexport const api_url = 'https://salty-oasis-19252.herokuapp.com';\n// export const api_url = 'http://127.0.0.1:5000';\n","import React from 'react';\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native';\n\nclass SongButton extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { song } = this.props;\n        return <TouchableOpacity>\n            <View style={styles.border}>\n                <Text numberOfLines={1} style={styles.songList}>\n                    {song.name}\n                </Text>\n                <Text style={styles.artist}>\n                    {song.artist}\n                </Text>\n            </View>\n        </TouchableOpacity>\n    }\n}\n\nconst styles = StyleSheet.create({\n    songList: {\n        fontSize: '1.5rem',\n        fontWeight: 'bold',\n        marginLeft: '1rem',\n        paddingTop: '.5rem'\n    },\n\n    artist: {\n        marginLeft: '1rem',\n        paddingBottom: '.5rem',\n    },\n\n    border: {\n        borderTopWidth: '2px',\n        borderColor: 'rgba(100, 100, 100, 0.5)',\n    },\n});\n\nexport default SongButton;\n","import React from 'react';\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native';\n\nclass ContentList extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const {list, letter} = this.props;\n\n        return (\n            <View key={letter}>\n                <Text style={styles.letterTag}>\n                    {letter.toUpperCase()}\n                </Text>\n                <View>\n                    {list}\n                </View>\n            </View>\n        );\n    }\n}\n\nconst styles = StyleSheet.create({\n    letterTag: {\n        backgroundColor: '#b4b3fd',\n        color: 'white',\n        paddingLeft: '1rem',\n        fontSize: '1.5rem',\n        paddingTop: '.5rem',\n        paddingBottom: '.5rem',\n        borderStyle: 'solid',\n        borderColor: '#7e84db',\n        borderTopWidth: '3px'\n    },\n});\n\nexport default ContentList;\n","import React from 'react';\nimport { View } from 'react-native';\nimport { sortedAlpha } from '../../util';\nimport SongButton from './SongButton';\nimport ContentList from '../ContentList';\n\nclass SongContent extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const {data, type, updateDisplay} = this.props;\n        const alpha = sortedAlpha(data[type]);\n        const content = [];\n\n        for (const letter in alpha) {\n            if (alpha[letter].length === 0) continue;\n\n            const songList = alpha[letter].map(\n                song => <SongButton key={song.id} song={song}/>\n            );\n\n            content.push(<ContentList key={letter} list={songList} letter={letter}/>);\n        }\n\n        return (\n            <View>\n                {content}\n            </View>\n        );\n    }\n}\n\nexport default SongContent;\n","import React from 'react';\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native';\nimport { request } from '../util';\nimport AllSongs from '../content/songs/AllSongs';\n\nclass SongsButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handlePress = this.handlePress.bind(this);\n    }\n\n    handlePress() {\n        const response = request('songs');\n        response\n        .then(res => res.json())\n        .then(data => {\n          if (data.Songs !== 'songs') {\n            const content = <AllSongs data={data} type=\"Songs\" />\n            this.props.updateDisplay(content, 'Songs');\n          }\n        })\n        .catch(err => {\n            console.log(err)\n        });\n    }\n\n    render() {\n        return (\n            <TouchableOpacity\n              onPress={this.handlePress}\n              style={{}}>\n                <Text>Songs</Text>\n            </TouchableOpacity>\n        );\n    }\n}\n\nexport default SongsButton;\n","import React from 'react';\nimport { StyleSheet, Text, View, TouchableOpacity, Image } from 'react-native';\nimport { getSongs } from './songsByAlbum';\nimport SongButton from '../songs/SongButton';\n\nclass AlbumButton extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    handlePress(id, updateDisplay) {\n        getSongs(id).then(data => {\n            const content = data.map(song => <SongButton key={song.id} song={song} />);\n            updateDisplay(content, `${data[0].album}`);\n        });\n    }\n\n    render() {\n        const {album, updateDisplay} = this.props;\n        return <TouchableOpacity style={styles.button} onPress={() => {this.handlePress(album.id, updateDisplay)}}>\n                    <Image\n                        style={styles.cover}\n                        source={{uri: `${album.cover}`}}\n                    />\n                    <Text numberOfLines={1} style={styles.name}>{album.name}</Text>\n                </TouchableOpacity>\n    }\n}\n\nconst styles = StyleSheet.create({\n    button: {\n        display: 'flex',\n        flexDirection: 'row'\n    },\n\n    cover: {\n        width: '7rem',\n        height: '7rem'\n    },\n\n    name: {\n        textAlignVertical: 'center',\n        margin: 'auto',\n        marginLeft: '1rem',\n        fontSize: '1.5rem',\n        fontWeight: 'bold'\n    },\n});\n\nexport default AlbumButton;","import { api_url } from '../../util';\n\nexport async function getSongs(album_id) {\n    const content = [];\n    const url = `${api_url}/albums/${album_id}`;\n    const album = await fetch(url).then(res => res.json()).then(data => data);\n\n    for (const song of album.songs) {\n        const [id, name] = song;\n        await fetch(`${api_url}/songs/${id}`).then(res=>res.json()).then(song => content.push(song));\n    }\n\n    return content;\n}","import React from 'react';\nimport { StyleSheet, Text, View, TouchableOpacity, Image } from 'react-native';\nimport { sortedAlpha } from '../../util';\nimport AlbumButton from './AlbumButton';\nimport ContentList from '../ContentList';\n\nclass AllAlbums extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const {data, type, updateDisplay} = this.props;\n        const alpha = sortedAlpha(data[type]);\n        const content = [];\n\n        for (const letter in alpha) {\n            if (alpha[letter].length === 0) continue;\n\n            const albumList = alpha[letter].map(\n                (album) => <AlbumButton key={album.id} album={album} updateDisplay={updateDisplay}/>\n            );\n\n            content.push(<ContentList key={letter} list={albumList} letter={letter}/>);\n        }\n\n        return (\n            <View>{content}</View>\n        );\n    }\n}\n\nexport default AllAlbums;\n","import React from 'react';\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native';\nimport { request } from '../util';\nimport  AllAlbums  from '../content/albums/AllAlbums';\n\nclass AlbumButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handlePress = this.handlePress.bind(this);\n    }\n\n    handlePress() {\n        const response = request('albums');\n        response\n        .then(res => res.json())\n        .then(data => {\n          if (data.Albums !== 'albums') {\n              const content = <AllAlbums data={data} type='Albums' updateDisplay={this.props.updateDisplay}/>\n              this.props.updateDisplay(content, 'Albums');\n          }\n        })\n        .catch(err => {\n            console.log(err)\n        });\n    }\n\n    render() {\n        return (\n            <TouchableOpacity\n              onPress={this.handlePress}\n              style={{}}>\n                <Text>Albums</Text>\n            </TouchableOpacity>\n        );\n    }\n}\n\nexport default AlbumButton;\n","import React from 'react';\nimport { StyleSheet, Text, View, TouchableOpacity, Image } from 'react-native';\nimport { getAlbums } from './OneArtist';\nimport AlbumButton from '../albums/AlbumButton';\n\nclass ArtistButton extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    handlePress(id, updateDisplay) {\n        getAlbums(id).then(data =>{\n            const content = data.map(\n                album => <AlbumButton key={album.id} album={album} updateDisplay={updateDisplay}/>\n            );\n            updateDisplay(<View>{content}</View>, `${data[0].artist}`);\n        });\n    }\n\n    render() {\n        const {artist, updateDisplay} = this.props;\n        return <TouchableOpacity onPress={() => {this.handlePress(artist.id, updateDisplay)}}>\n            <Text style={styles.artistList}>\n                {artist.name}\n            </Text>\n        </TouchableOpacity>\n    }\n}\n\n\nconst styles = StyleSheet.create({\n\n    artistList: {\n        fontSize: '1.5rem',\n        fontWeight: 'bold',\n        marginLeft: '1rem',\n        paddingTop: '.5rem',\n        paddingBottom: '.5rem'\n    },\n\n});\n\n\nexport default ArtistButton;\n","import { api_url } from \"../../util\";\nimport React from 'react';\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native';\n\nexport async function getAlbums(id) {\n    let albumList = [];\n    const content = [];\n    const url = `${api_url}/artists/${id}`;\n    await fetch(url).then( res => res.json() ).then( data => albumList = data.Album);\n    \n    for (const albumId of albumList) {\n        const url = `${api_url}/albums/${albumId}`;\n        await fetch(url).then(res=>res.json()).then(data => {\n            content.push(data);\n        })\n        .catch(err => console.log(err));\n    }\n\n    return content;\n}","import React from 'react';\nimport {Text, View} from 'react-native';\nimport ArtistButton from './ArtistButton';\nimport { sortedAlpha } from '../../util';\nimport ContentList from '../ContentList';\n\nclass ArtistContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            content: <Text></Text>\n        };\n\n    }\n\n    render() {\n        const {data, type, updateDisplay} = this.props;\n        const alpha = sortedAlpha(data[type]);\n        const content = [];\n\n        for (const letter in alpha) {\n            if (alpha[letter].length === 0) continue;\n\n            const artistList = alpha[letter].map(\n                artist => <ArtistButton key={artist.id} artist={artist} updateDisplay={updateDisplay}/>\n            );\n\n            content.push(<ContentList key={letter} list={artistList} letter={letter}/>);\n        }\n\n        return (\n            <View>\n                {content}\n            </View>\n        );\n    }\n}\n\nexport default ArtistContent;\n","import React from 'react';\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native';\nimport { request } from '../util';\nimport AllArtists from '../content/artists/AllArtists';\n\nclass ArtistButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handlePress = this.handlePress.bind(this);\n    }\n\n    \n    handlePress() {\n        const response = request('artists');\n        response\n        .then(res => res.json())\n        .then(data => {\n            if (data.Artists !== 'artist') {\n                const content = (\n                    <AllArtists\n                        data={data}\n                        type=\"Artists\"\n                        updateDisplay={this.props.updateDisplay}\n                    />\n                );\n                this.props.updateDisplay(content, \"Artists\")\n            };\n        })\n        .catch(err => {\n            console.log(err)\n        });\n    }\n\n    render() {\n        return (\n            <TouchableOpacity\n              onPress={this.handlePress}\n              style={{}}>\n                <Text>Artists</Text>\n            </TouchableOpacity>\n        );\n    }\n}\n\nexport default ArtistButton;\n","import React from 'react';\nimport { StyleSheet, Text, View, ScrollView } from 'react-native';\nimport SongsButton from './src/menu/songsButton';\nimport AlbumButton from './src/menu/albumButton';\nimport ArtistButton from './src/menu/artistButton';\nimport { request } from './src/util';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n      content: <Text></Text>,\n      contentType: ''\n    };\n\n    this.displayContent = this.displayContent.bind(this);\n  }\n\n  componentDidMount() {\n    const content = <Text>{'Connecting to API ... Please Wait'}</Text>\n    this.displayContent(content, \"Welcome\");\n    request()\n    .then(res => {\n      const content = <Text>{'Connecting to API ... Done'}</Text>\n      if (res.ok) this.displayContent(content, \"Welcome\");\n    }).catch(err => {\n      const content = <Text>{`Connecting to API ... Error\\n${err}`}</Text>\n      this.displayContent(content, \"Error\");\n    })\n  }\n\n  displayContent = (arg, type) => {\n    this.setState({content: arg, contentType: type});\n  }\n\n  render() {\n    return (\n      <View style={styles.container}>\n        <ScrollView style={styles.content}>\n          <View>\n              <Text style={styles.contentHeader}>{this.state.contentType}</Text>\n          </View>\n          {this.state.content}\n        </ScrollView>\n        <View style={styles.menu}>\n          <ArtistButton updateDisplay={this.displayContent}/>\n          <SongsButton updateDisplay={this.displayContent}/>\n          <AlbumButton updateDisplay={this.displayContent}/>\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    justifyContent: 'space-between',\n  },\n\n  content: {\n    marginBottom: '20%'\n  },\n\n  menu: {\n    height: '10%',\n    position: 'fixed',\n    bottom: 0,\n    flexDirection: 'row',\n    backgroundColor: 'grey',\n    width: '100%',\n    justifyContent: 'space-around',\n    alignItems: 'center'\n  },\n\n  contentHeader: {\n    textAlign: 'center',\n    color: 'white',\n    backgroundColor: '#8496f8',\n    paddingTop: '1rem',\n    paddingBottom: '1rem',\n    fontSize: '3rem'\n  }\n});\n\nexport default App;\n"],"sourceRoot":""}