{"version":3,"sources":["src/util.js","src/menu/songsButton.js","src/content/AlbumContent.js","src/content/SongContent.js","src/content/ArtistContent.js","src/content/content.js","src/menu/albumButton.js","src/menu/artistButton.js","App.js"],"names":["request","params","url","base_url","includes","fetch","SongsButton","props","handlePress","bind","then","res","json","data","text","Songs","forEach","song","name","artist","album","id","updateDisplay","catch","err","console","log","TouchableOpacity","onPress","this","style","Text","React","Component","AlbumContent","SongContent","ArtistContent","sorted","sort","a","b","alpha","content","letter","split","toLowerCase","push","length","artistList","map","key","styles","View","letterTag","toUpperCase","StyleSheet","create","backgroundColor","color","paddingLeft","fontSize","paddingTop","paddingBottom","borderStyle","borderColor","borderTopWidth","fontWeight","marginLeft","Content","type","contentHeader","choose","textAlign","AlbumButton","Albums","songs","join","ArtistButton","Artists","App","displayContent","arg","setState","contentType","state","ok","container","ScrollView","menu","flex","justifyContent","marginBottom","height","position","bottom","flexDirection","width","alignItems"],"mappings":"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","file":"static/js/app.bbf37289.chunk.js","sourcesContent":["function request(params) {\n    const base_url = 'https://salty-oasis-19252.herokuapp.com';\n    // const base_url = 'http://127.0.0.1:5000/';\n    const endpoints = ['albums', 'artists', 'songs'];\n    let url;\n\n    if (endpoints.includes(params)) url = `${base_url}/${params}`;\n    else  url = base_url;\n\n    const promise = fetch(url);\n\n    return promise;\n}\n\nexport default request;\n","import React from 'react';\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native';\nimport request from '../util';\n\nclass SongsButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handlePress = this.handlePress.bind(this);\n    }\n\n    handlePress() {\n        const response = request('songs');\n        response\n        .then(res => res.json())\n        .then(data => {\n          let text = \"\";\n          data.Songs.forEach(\n            (song) => {\n                text += `${song.name} - ${song.artist} - ${song.album}\\nID: ${song.id}\\n\\n`;\n          });\n          this.props.updateDisplay(text);\n        })\n        .catch(err => {\n            console.log(err)\n            // this.props.updateDisplay('Something went wrong');\n        });\n    }\n\n    render() {\n        return (\n            <TouchableOpacity\n              onPress={this.handlePress}\n              style={{}}>\n                <Text>Songs</Text>\n            </TouchableOpacity>\n        );\n    }\n}\n\nexport default SongsButton;\n","import React from 'react';\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native';\n\nclass AlbumContent extends React.Component {\n    render() {\n        return (\n            <Text>Albums</Text>\n        );\n    }\n}\n\nexport default AlbumContent;\n","import React from 'react';\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native';\n\nclass SongContent extends React.Component {\n    render() {\n        return (\n            <Text>Song</Text>\n        );\n    }\n}\n\nexport default SongContent;\n","import React from 'react';\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native';\n\nclass ArtistContent extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n\n        const artists = this.props.data;\n        const sorted = artists.sort((a, b)=> (a.name > b.name) ? 1 : -1);\n        const alpha = {};\n        const content = [];\n\n        'abcdefghijklmnopqrstuvwxyz'.split('').forEach(\n            letter => {\n                alpha[letter] = [] ;\n            }\n        );\n\n        sorted.forEach(\n            artist => {\n                const letter = artist.name[0].toLowerCase();\n                alpha[letter].push({\n                    id: `${artist.id}`,\n                    name: `${artist.name}`\n                })\n            }\n        );\n\n        for (const letter in alpha) {\n            if (alpha[letter].length === 0) continue;\n            const artistList = alpha[letter].map((artist) => {\n                return <TouchableOpacity key={artist.id}>\n                    <Text style={styles.artistList}>\n                        {artist.name}\n                    </Text>\n                </TouchableOpacity>\n            });\n            content.push(\n                <View key={letter}>\n                    <Text style={styles.letterTag}>\n                        {letter.toUpperCase()}\n                    </Text>\n                    <View>\n                        {artistList}\n                    </View>\n                </View>\n            );\n        }\n\n        return (\n            <View>\n                {content}\n            </View>\n        );\n    }\n}\n\nconst styles = StyleSheet.create({\n    letterTag: {\n        backgroundColor: '#b4b3fd',\n        color: 'white',\n        paddingLeft: '1rem',\n        fontSize: '1.5rem',\n        paddingTop: '.5rem',\n        paddingBottom: '.5rem',\n        borderStyle: 'solid',\n        borderColor: '#7e84db',\n        borderTopWidth: '3px'\n    },\n\n    artistList: {\n        fontSize: '1.5rem',\n        fontWeight: 'bold',\n        marginLeft: '1rem',\n        paddingTop: '.5rem',\n        paddingBottom: '.5rem'\n    }\n});\n\nexport default ArtistContent;\n","import React from 'react';\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native';\nimport AlbumContent from './AlbumContent';\nimport SongContent from './SongContent';\nimport ArtistContent from './ArtistContent';\n\nclass Content extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const data = this.props.data[this.props.type]\n        const choose = (type) => {\n            switch (type) {\n                case \"Albums\":\n                    return <AlbumContent data={data}/>;\n\n                case \"Songs\":\n                    return <SongContent data={data} />;\n\n                case \"Artists\":\n                    return <ArtistContent data={data} />;\n\n                default:\n                    return <Text>{this.props.data}</Text>;\n            }\n        };\n        return (\n            <View>\n                <View>\n                    <Text style={styles.contentHeader}>{this.props.type}</Text>\n                </View>\n                <View>\n                    {choose(this.props.type)}\n                </View>\n            </View>\n        );\n    }\n}\n\nconst styles = StyleSheet.create({\n    contentHeader: {\n        textAlign: 'center',\n        color: 'white',\n        backgroundColor: '#8496f8',\n        paddingTop: '1rem',\n        paddingBottom: '1rem',\n        fontSize: '3rem'\n    }\n});\n\nexport default Content;\n","import React from 'react';\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native';\nimport request from '../util';\n\nclass AlbumButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handlePress = this.handlePress.bind(this);\n    }\n\n    handlePress() {\n        const response = request('albums');\n        response\n        .then(res => res.json())\n        .then(data => {\n          let text = \"\";\n          data.Albums.forEach(\n            (album) => {\n                text += `${album.artist}\\n${album.name}\\nID: ${album.id}\\nSongs: [\\n ${album.songs.map((song) => `\\t${song}\\n`).join('')}]\\n\\n`\n          });\n          this.props.updateDisplay(text);\n        })\n        .catch(err => {\n            console.log(err)\n            // this.props.updateDisplay('Something went wrong');\n        });\n    }\n\n    render() {\n        return (\n            <TouchableOpacity\n              onPress={this.handlePress}\n              style={{}}>\n                <Text>Albums</Text>\n            </TouchableOpacity>\n        );\n    }\n}\n\nexport default AlbumButton;\n","import React from 'react';\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native';\nimport request from '../util';\n\nclass ArtistButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handlePress = this.handlePress.bind(this);\n    }\n\n    handlePress() {\n        const response = request('artists');\n        response\n        .then(res => res.json())\n        .then(data => {\n            if (data.Artists !== 'artist') this.props.updateDisplay(data, \"Artists\");\n        })\n        .catch(err => {\n            console.log(err)\n            // this.props.updateDisplay('Something went wrong');\n        });\n    }\n\n    render() {\n        return (\n            <TouchableOpacity\n              onPress={this.handlePress}\n              style={{}}>\n                <Text>Artists</Text>\n            </TouchableOpacity>\n        );\n    }\n}\n\nexport default ArtistButton;\n","import React from 'react';\nimport { StyleSheet, Text, View, TouchableOpacity, ScrollView } from 'react-native';\nimport SongsButton from './src/menu/songsButton';\nimport Conent from './src/content/content';\nimport AlbumButton from './src/menu/albumButton';\nimport ArtistButton from './src/menu/artistButton';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n      content: \"hello\",\n      contentType: \"start\"\n    };\n  }\n\n  componentDidMount() {\n    // const response = request('albums');\n    this.displayContent('Connecting to API ... Please Wait', \"Welcome\");\n    fetch('https://salty-oasis-19252.herokuapp.com')\n    .then(res => {\n      if (res.ok) this.displayContent('Connecting to API ... Done', \"Welcome\");\n    }).catch(err => {\n      this.displayContent(`Connecting to API ... Error\\n${err}`, \"Error\");\n    })\n  }\n\n  displayContent = (arg, type) => {\n    // console.log('arg', arg);\n    this.setState({content: arg, contentType: type});\n  }\n\n  render() {\n    return (\n      <View style={styles.container}>\n        <ScrollView style={styles.content}>\n          <Conent data={this.state.content} type={this.state.contentType}/>\n        </ScrollView>\n        <View style={styles.menu}>\n          <ArtistButton updateDisplay={this.displayContent}/>\n          <SongsButton updateDisplay={this.displayContent}/>\n          <AlbumButton updateDisplay={this.displayContent}/>\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    // alignItems: 'center',\n    justifyContent: 'space-between',\n  },\n  content: {\n    marginBottom: '10%'\n  },\n  menu: {\n    height: '10%',\n    position: 'fixed',\n    bottom: 0,\n    flexDirection: 'row',\n    backgroundColor: 'grey',\n    width: '100%',\n    justifyContent: 'space-around',\n    alignItems: 'center'\n  }\n});\n\nexport default App;\n"],"sourceRoot":""}