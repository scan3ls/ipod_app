{"version":3,"sources":["src/util.js","src/menu/songsButton.js","src/content/AlbumContent.js","src/content/SongContent.js","src/content/ArtistContent.js","src/content/content.js","src/menu/albumButton.js","src/menu/artistButton.js","App.js"],"names":["request","params","url","base_url","includes","fetch","sortedAlpha","items","alpha","sorted","sort","a","b","name","split","forEach","letter","item","toLowerCase","push","id","cover","SongsButton","props","handlePress","bind","then","res","json","data","text","Songs","song","artist","album","updateDisplay","catch","err","console","log","TouchableOpacity","onPress","this","style","Text","React","Component","AlbumContent","content","length","albumList","map","key","styles","button","Image","source","uri","numberOfLines","View","letterTag","toUpperCase","StyleSheet","create","backgroundColor","color","paddingLeft","fontSize","paddingTop","paddingBottom","borderStyle","borderColor","borderTopWidth","display","flexDirection","width","height","textAlignVertical","margin","marginLeft","fontWeight","SongContent","ArtistContent","artistList","Content","type","contentHeader","choose","textAlign","AlbumButton","Albums","ArtistButton","Artists","App","displayContent","arg","setState","contentType","state","ok","container","ScrollView","menu","flex","justifyContent","marginBottom","position","bottom","alignItems"],"mappings":"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","file":"static/js/app.c0140063.chunk.js","sourcesContent":["export function request(params) {\n    const base_url = 'https://salty-oasis-19252.herokuapp.com';\n    // const base_url = 'http://127.0.0.1:5000/';\n    const endpoints = ['albums', 'artists', 'songs'];\n    let url;\n\n    if (endpoints.includes(params)) url = `${base_url}/${params}`;\n    else  url = base_url;\n\n    const promise = fetch(url);\n\n    return promise;\n}\n\nexport function sortedAlpha(items) {\n    const alpha = {};\n    const sorted = items.sort((a, b) => (a.name > b.name) ? 1 : -1);\n\n    'abcdefghijklmnopqrstuvwxyz'.split('').forEach(\n        letter => {\n            alpha[letter] = [] ;\n        }\n    );\n\n    sorted.forEach(\n        item => {\n            const letter = item.name[0].toLowerCase();\n            alpha[letter].push({\n                id: `${item.id}`,\n                name: `${item.name}`,\n                cover: `${item.cover}`\n            })\n        }\n    );\n\n    return alpha;\n}\n\n","import React from 'react';\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native';\nimport { request } from '../util';\n\nclass SongsButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handlePress = this.handlePress.bind(this);\n    }\n\n    handlePress() {\n        const response = request('songs');\n        response\n        .then(res => res.json())\n        .then(data => {\n          let text = \"\";\n          data.Songs.forEach(\n            (song) => {\n                text += `${song.name} - ${song.artist} - ${song.album}\\nID: ${song.id}\\n\\n`;\n          });\n          this.props.updateDisplay(text);\n        })\n        .catch(err => {\n            console.log(err)\n            // this.props.updateDisplay('Something went wrong');\n        });\n    }\n\n    render() {\n        return (\n            <TouchableOpacity\n              onPress={this.handlePress}\n              style={{}}>\n                <Text>Songs</Text>\n            </TouchableOpacity>\n        );\n    }\n}\n\nexport default SongsButton;\n","import React from 'react';\nimport { StyleSheet, Text, View, TouchableOpacity, Image } from 'react-native';\nimport { sortedAlpha } from '../util';\n\nclass AlbumContent extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const alpha = sortedAlpha(this.props.data);\n        const content = [];\n\n        for (const letter in alpha) {\n            if (alpha[letter].length === 0) continue;\n\n            const albumList = alpha[letter].map(\n                (album) => {\n                    return <TouchableOpacity key={album.id} style={styles.button}>\n                        <Image\n                            style={styles.cover}\n                            source={{uri: `${album.cover}`}}\n                        />\n                        <Text numberOfLines={1} style={styles.name}>{album.name}</Text>\n                    </TouchableOpacity>\n                }\n            );\n\n            content.push(\n                <View key={letter}>\n                    <Text style={styles.letterTag}>{letter.toUpperCase()}</Text>\n                    <View>{albumList}</View>\n                </View>\n            );\n        }\n\n        return (\n            <View>{content}</View>\n        );\n    }\n}\n\nconst styles = StyleSheet.create({\n    letterTag: {\n        backgroundColor: '#b4b3fd',\n        color: 'white',\n        paddingLeft: '1rem',\n        fontSize: '1.5rem',\n        paddingTop: '.5rem',\n        paddingBottom: '.5rem',\n        borderStyle: 'solid',\n        borderColor: '#7e84db',\n        borderTopWidth: '3px'\n    },\n\n    button: {\n        display: 'flex',\n        flexDirection: 'row'\n    },\n\n    cover: {\n        width: '7rem',\n        height: '7rem'\n    },\n\n    name: {\n        textAlignVertical: 'center',\n        margin: 'auto',\n        marginLeft: '1rem',\n        fontSize: '1.5rem',\n        fontWeight: 'bold'\n    },\n});\n\nexport default AlbumContent;\n","import React from 'react';\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native';\n\nclass SongContent extends React.Component {\n    render() {\n        return (\n            <Text>Song</Text>\n        );\n    }\n}\n\nexport default SongContent;\n","import React from 'react';\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native';\nimport { sortedAlpha } from '../util';\n\nclass ArtistContent extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const alpha = sortedAlpha(this.props.data);\n        const content = [];\n\n        for (const letter in alpha) {\n            if (alpha[letter].length === 0) continue;\n\n            const artistList = alpha[letter].map((artist) => {\n                return <TouchableOpacity key={artist.id}>\n                    <Text style={styles.artistList}>\n                        {artist.name}\n                    </Text>\n                </TouchableOpacity>\n            });\n\n            content.push(\n                <View key={letter}>\n                    <Text style={styles.letterTag}>\n                        {letter.toUpperCase()}\n                    </Text>\n                    <View>\n                        {artistList}\n                    </View>\n                </View>\n            );\n        }\n\n        return (\n            <View>\n                {content}\n            </View>\n        );\n    }\n}\n\nconst styles = StyleSheet.create({\n    letterTag: {\n        backgroundColor: '#b4b3fd',\n        color: 'white',\n        paddingLeft: '1rem',\n        fontSize: '1.5rem',\n        paddingTop: '.5rem',\n        paddingBottom: '.5rem',\n        borderStyle: 'solid',\n        borderColor: '#7e84db',\n        borderTopWidth: '3px'\n    },\n\n    artistList: {\n        fontSize: '1.5rem',\n        fontWeight: 'bold',\n        marginLeft: '1rem',\n        paddingTop: '.5rem',\n        paddingBottom: '.5rem'\n    }\n});\n\nexport default ArtistContent;\n","import React from 'react';\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native';\nimport AlbumContent from './AlbumContent';\nimport SongContent from './SongContent';\nimport ArtistContent from './ArtistContent';\n\nclass Content extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const data = this.props.data[this.props.type]\n        const choose = (type) => {\n            switch (type) {\n                case \"Albums\":\n                    return <AlbumContent data={data}/>;\n\n                case \"Songs\":\n                    return <SongContent data={data} />;\n\n                case \"Artists\":\n                    return <ArtistContent data={data} />;\n\n                default:\n                    return <Text>{this.props.data}</Text>;\n            }\n        };\n        return (\n            <View>\n                <View>\n                    <Text style={styles.contentHeader}>{this.props.type}</Text>\n                </View>\n                <View>\n                    {choose(this.props.type)}\n                </View>\n            </View>\n        );\n    }\n}\n\nconst styles = StyleSheet.create({\n    contentHeader: {\n        textAlign: 'center',\n        color: 'white',\n        backgroundColor: '#8496f8',\n        paddingTop: '1rem',\n        paddingBottom: '1rem',\n        fontSize: '3rem'\n    }\n});\n\nexport default Content;\n","import React from 'react';\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native';\nimport { request } from '../util';\n\nclass AlbumButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handlePress = this.handlePress.bind(this);\n    }\n\n    handlePress() {\n        const response = request('albums');\n        response\n        .then(res => res.json())\n        .then(data => {\n          if (data.Albums !== 'albums') this.props.updateDisplay(data, 'Albums');\n        })\n        .catch(err => {\n            console.log(err)\n            // this.props.updateDisplay('Something went wrong');\n        });\n    }\n\n    render() {\n        return (\n            <TouchableOpacity\n              onPress={this.handlePress}\n              style={{}}>\n                <Text>Albums</Text>\n            </TouchableOpacity>\n        );\n    }\n}\n\nexport default AlbumButton;\n","import React from 'react';\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native';\nimport { request } from '../util';\n\nclass ArtistButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handlePress = this.handlePress.bind(this);\n    }\n\n    handlePress() {\n        const response = request('artists');\n        response\n        .then(res => res.json())\n        .then(data => {\n            if (data.Artists !== 'artist') this.props.updateDisplay(data, \"Artists\");\n        })\n        .catch(err => {\n            console.log(err)\n            // this.props.updateDisplay('Something went wrong');\n        });\n    }\n\n    render() {\n        return (\n            <TouchableOpacity\n              onPress={this.handlePress}\n              style={{}}>\n                <Text>Artists</Text>\n            </TouchableOpacity>\n        );\n    }\n}\n\nexport default ArtistButton;\n","import React from 'react';\nimport { StyleSheet, Text, View, TouchableOpacity, ScrollView } from 'react-native';\nimport SongsButton from './src/menu/songsButton';\nimport Conent from './src/content/content';\nimport AlbumButton from './src/menu/albumButton';\nimport ArtistButton from './src/menu/artistButton';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n      content: \"hello\",\n      contentType: \"start\"\n    };\n  }\n\n  componentDidMount() {\n    // const response = request('albums');\n    this.displayContent('Connecting to API ... Please Wait', \"Welcome\");\n    fetch('https://salty-oasis-19252.herokuapp.com')\n    .then(res => {\n      if (res.ok) this.displayContent('Connecting to API ... Done', \"Welcome\");\n    }).catch(err => {\n      this.displayContent(`Connecting to API ... Error\\n${err}`, \"Error\");\n    })\n  }\n\n  displayContent = (arg, type) => {\n    // console.log('arg', arg);\n    this.setState({content: arg, contentType: type});\n  }\n\n  render() {\n    return (\n      <View style={styles.container}>\n        <ScrollView style={styles.content}>\n          <Conent data={this.state.content} type={this.state.contentType}/>\n        </ScrollView>\n        <View style={styles.menu}>\n          <ArtistButton updateDisplay={this.displayContent}/>\n          <SongsButton updateDisplay={this.displayContent}/>\n          <AlbumButton updateDisplay={this.displayContent}/>\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    // alignItems: 'center',\n    justifyContent: 'space-between',\n  },\n  content: {\n    marginBottom: '10%'\n  },\n  menu: {\n    height: '10%',\n    position: 'fixed',\n    bottom: 0,\n    flexDirection: 'row',\n    backgroundColor: 'grey',\n    width: '100%',\n    justifyContent: 'space-around',\n    alignItems: 'center'\n  }\n});\n\nexport default App;\n"],"sourceRoot":""}