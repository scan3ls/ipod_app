{"version":3,"sources":["src/util.js","src/content/songs/SongButton.js","src/content/ContentList.js","src/content/songs/AllSongs.js","src/menu/songsButton.js","src/content/albums/AlbumButton.js","src/content/albums/AllAlbums.js","src/menu/albumButton.js","src/content/artists/ArtistButton.js","src/content/artists/AllArtists.js","src/content/artists/OneArtist.js","src/menu/artistButton.js","App.js"],"names":["request","params","url","base_url","includes","fetch","sortedAlpha","items","alpha","sorted","sort","a","b","name","split","forEach","letter","item","toLowerCase","push","id","cover","artist","api_url","SongButton","props","song","this","TouchableOpacity","View","style","styles","border","Text","numberOfLines","songList","React","Component","StyleSheet","create","fontSize","fontWeight","marginLeft","paddingTop","paddingBottom","borderTopWidth","borderColor","ContentList","list","key","letterTag","toUpperCase","backgroundColor","color","paddingLeft","borderStyle","SongContent","data","type","updateDisplay","content","length","map","SongsButton","handlePress","bind","then","res","json","Songs","AllSongs","catch","err","console","log","onPress","AlbumButton","album","button","Image","source","uri","display","flexDirection","width","height","textAlignVertical","margin","AllAlbums","albumList","Albums","ArtistButton","artistList","ArtistContent","state","async","Album","albumId","getAlbums","Artists","AllArtists","App","displayContent","arg","setState","contentType","ok","container","ScrollView","contentHeader","menu","flex","justifyContent","marginBottom","position","bottom","alignItems","textAlign"],"mappings":"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","file":"static/js/app.05b3aee3.chunk.js","sourcesContent":["export function request(params) {\n    const base_url = 'https://salty-oasis-19252.herokuapp.com';\n    // const base_url = 'http://127.0.0.1:5000';\n    const endpoints = ['albums', 'artists', 'songs'];\n    let url;\n\n    if (endpoints.includes(params)) url = `${base_url}/${params}`;\n    else  url = base_url;\n\n    const promise = fetch(url);\n\n    return promise;\n}\n\nexport function sortedAlpha(items) {\n    const alpha = {};\n    const sorted = items.sort((a, b) => (a.name > b.name) ? 1 : -1);\n\n    'abcdefghijklmnopqrstuvwxyz'.split('').forEach(\n        letter => {\n            alpha[letter] = [] ;\n        }\n    );\n\n    sorted.forEach(\n        item => {\n            const letter = item.name[0].toLowerCase();\n            alpha[letter].push({\n                id: `${item.id}`,\n                name: `${item.name}`,\n                cover: `${item.cover}`,\n                artist: `${item.artist}`\n            })\n        }\n    );\n\n    return alpha;\n}\n\nexport const api_url = 'https://salty-oasis-19252.herokuapp.com';\n","import React from 'react';\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native';\n\nclass SongButton extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { song } = this.props;\n        return <TouchableOpacity>\n            <View style={styles.border}>\n                <Text numberOfLines={1} style={styles.songList}>\n                    {song.name}\n                </Text>\n                <Text style={styles.artist}>\n                    {song.artist}\n                </Text>\n            </View>\n        </TouchableOpacity>\n    }\n}\n\nconst styles = StyleSheet.create({\n    songList: {\n        fontSize: '1.5rem',\n        fontWeight: 'bold',\n        marginLeft: '1rem',\n        paddingTop: '.5rem'\n    },\n\n    artist: {\n        marginLeft: '1rem',\n        paddingBottom: '.5rem',\n    },\n\n    border: {\n        borderTopWidth: '2px',\n        borderColor: 'rgba(100, 100, 100, 0.5)',\n    },\n});\n\nexport default SongButton;\n","import React from 'react';\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native';\n\nclass ContentList extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const {list, letter} = this.props;\n\n        return (\n            <View key={letter}>\n                <Text style={styles.letterTag}>\n                    {letter.toUpperCase()}\n                </Text>\n                <View>\n                    {list}\n                </View>\n            </View>\n        );\n    }\n}\n\nconst styles = StyleSheet.create({\n    letterTag: {\n        backgroundColor: '#b4b3fd',\n        color: 'white',\n        paddingLeft: '1rem',\n        fontSize: '1.5rem',\n        paddingTop: '.5rem',\n        paddingBottom: '.5rem',\n        borderStyle: 'solid',\n        borderColor: '#7e84db',\n        borderTopWidth: '3px'\n    },\n});\n\nexport default ContentList;\n","import React from 'react';\nimport { View } from 'react-native';\nimport { sortedAlpha } from '../../util';\nimport SongButton from './SongButton';\nimport ContentList from '../ContentList';\n\nclass SongContent extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const {data, type, updateDisplay} = this.props;\n        const alpha = sortedAlpha(data[type]);\n        const content = [];\n\n        for (const letter in alpha) {\n            if (alpha[letter].length === 0) continue;\n\n            const songList = alpha[letter].map(\n                song => <SongButton key={song.id} song={song}/>\n            );\n\n            content.push(<ContentList key={letter} list={songList} letter={letter}/>);\n        }\n\n        return (\n            <View>\n                {content}\n            </View>\n        );\n    }\n}\n\nexport default SongContent;\n","import React from 'react';\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native';\nimport { request } from '../util';\nimport AllSongs from '../content/songs/AllSongs';\n\nclass SongsButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handlePress = this.handlePress.bind(this);\n    }\n\n    handlePress() {\n        const response = request('songs');\n        response\n        .then(res => res.json())\n        .then(data => {\n          if (data.Songs !== 'songs') {\n            const content = <AllSongs data={data} type=\"Songs\" />\n            this.props.updateDisplay(content, 'Songs');\n          }\n        })\n        .catch(err => {\n            console.log(err)\n        });\n    }\n\n    render() {\n        return (\n            <TouchableOpacity\n              onPress={this.handlePress}\n              style={{}}>\n                <Text>Songs</Text>\n            </TouchableOpacity>\n        );\n    }\n}\n\nexport default SongsButton;\n","import React from 'react';\nimport { StyleSheet, Text, View, TouchableOpacity, Image } from 'react-native';\n\nclass AlbumButton extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const {album} = this.props;\n\n        return <TouchableOpacity style={styles.button}>\n                    <Image\n                        style={styles.cover}\n                        source={{uri: `${album.cover}`}}\n                    />\n                    <Text numberOfLines={1} style={styles.name}>{album.name}</Text>\n                </TouchableOpacity>\n    }\n}\n\nconst styles = StyleSheet.create({\n    button: {\n        display: 'flex',\n        flexDirection: 'row'\n    },\n\n    cover: {\n        width: '7rem',\n        height: '7rem'\n    },\n\n    name: {\n        textAlignVertical: 'center',\n        margin: 'auto',\n        marginLeft: '1rem',\n        fontSize: '1.5rem',\n        fontWeight: 'bold'\n    },\n});\n\nexport default AlbumButton;","import React from 'react';\nimport { StyleSheet, Text, View, TouchableOpacity, Image } from 'react-native';\nimport { sortedAlpha } from '../../util';\nimport AlbumButton from './AlbumButton';\nimport ContentList from '../ContentList';\n\nclass AllAlbums extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const {data, type, updateDisplay} = this.props;\n        const alpha = sortedAlpha(data[type]);\n        const content = [];\n\n        for (const letter in alpha) {\n            if (alpha[letter].length === 0) continue;\n\n            const albumList = alpha[letter].map(\n                (album) => <AlbumButton key={album.id} album={album}/>\n            );\n\n            content.push(<ContentList key={letter} list={albumList} letter={letter}/>);\n        }\n\n        return (\n            <View>{content}</View>\n        );\n    }\n}\n\nexport default AllAlbums;\n","import React from 'react';\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native';\nimport { request } from '../util';\nimport  AllAlbums  from '../content/albums/AllAlbums';\n\nclass AlbumButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handlePress = this.handlePress.bind(this);\n    }\n\n    handlePress() {\n        const response = request('albums');\n        response\n        .then(res => res.json())\n        .then(data => {\n          if (data.Albums !== 'albums') {\n              const content = <AllAlbums data={data} type='Albums'/>\n              this.props.updateDisplay(content, 'Albums');\n          }\n        })\n        .catch(err => {\n            console.log(err)\n        });\n    }\n\n    render() {\n        return (\n            <TouchableOpacity\n              onPress={this.handlePress}\n              style={{}}>\n                <Text>Albums</Text>\n            </TouchableOpacity>\n        );\n    }\n}\n\nexport default AlbumButton;\n","import React from 'react';\nimport { StyleSheet, Text, View, TouchableOpacity, Image } from 'react-native';\n\nclass ArtistButton extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const {artist, handlePress} = this.props;\n        return <TouchableOpacity onPress={() => {handlePress(artist.id)}}>\n            <Text style={styles.artistList}>\n                {artist.name}\n            </Text>\n        </TouchableOpacity>\n    }\n}\n\n\nconst styles = StyleSheet.create({\n\n    artistList: {\n        fontSize: '1.5rem',\n        fontWeight: 'bold',\n        marginLeft: '1rem',\n        paddingTop: '.5rem',\n        paddingBottom: '.5rem'\n    },\n\n});\n\n\nexport default ArtistButton;\n","import React from 'react';\nimport { StyleSheet, Text, View, TouchableOpacity, Image } from 'react-native';\nimport ArtistButton from './ArtistButton';\nimport AlbumButton from '../albums/AlbumButton';\nimport { sortedAlpha } from '../../util';\nimport { getAlbums } from './OneArtist';\nimport ContentList from '../ContentList';\n\nclass ArtistContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            content: <Text></Text>\n        };\n\n        this.handlePress = this.handlePress.bind(this);\n    }\n\n    handlePress(id) {\n        const updateDisplay = this.props.updateDisplay;\n\n        getAlbums(id).then(data =>{\n            const content = data.map(\n                album => <AlbumButton key={album.id} album={album}/>\n            );\n            updateDisplay(<View>{content}</View>, `${data[0].artist}`);\n        });\n    }\n\n    render() {\n        const {data, type} = this.props;\n        const alpha = sortedAlpha(data[type]);\n        const content = [];\n\n        for (const letter in alpha) {\n            if (alpha[letter].length === 0) continue;\n\n            const artistList = alpha[letter].map(\n                artist => <ArtistButton key={artist.id} artist={artist} handlePress={this.handlePress}/>\n            );\n\n            content.push(<ContentList key={letter} list={artistList} letter={letter}/>);\n        }\n\n        return (\n            <View>\n                {content}\n            </View>\n        );\n    }\n}\n\nexport default ArtistContent;\n","import { api_url } from \"../../util\";\nimport React from 'react';\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native';\n\nexport async function getAlbums(id) {\n    let albumList = [];\n    const content = [];\n    const url = `${api_url}/artists/${id}`;\n    await fetch(url).then( res => res.json() ).then( data => albumList = data.Album);\n    \n    for (const albumId of albumList) {\n        const url = `${api_url}/albums/${albumId}`;\n        await fetch(url).then(res=>res.json()).then(data => {\n            content.push(data);\n        })\n        .catch(err => console.log(err));\n    }\n\n    return content;\n}","import React from 'react';\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native';\nimport { request } from '../util';\nimport AllArtists from '../content/artists/AllArtists';\n\nclass ArtistButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handlePress = this.handlePress.bind(this);\n    }\n\n    \n    handlePress() {\n        const response = request('artists');\n        response\n        .then(res => res.json())\n        .then(data => {\n            if (data.Artists !== 'artist') {\n                const content = (\n                    <AllArtists\n                        data={data}\n                        type=\"Artists\"\n                        updateDisplay={this.props.updateDisplay}\n                    />\n                );\n                this.props.updateDisplay(content, \"Artists\")\n            };\n        })\n        .catch(err => {\n            console.log(err)\n        });\n    }\n\n    render() {\n        return (\n            <TouchableOpacity\n              onPress={this.handlePress}\n              style={{}}>\n                <Text>Artists</Text>\n            </TouchableOpacity>\n        );\n    }\n}\n\nexport default ArtistButton;\n","import React from 'react';\nimport { StyleSheet, Text, View, ScrollView } from 'react-native';\nimport SongsButton from './src/menu/songsButton';\nimport AlbumButton from './src/menu/albumButton';\nimport ArtistButton from './src/menu/artistButton';\nimport { request } from './src/util';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n      content: <Text></Text>,\n      contentType: ''\n    };\n\n    this.displayContent = this.displayContent.bind(this);\n  }\n\n  componentDidMount() {\n    const content = <Text>{'Connecting to API ... Please Wait'}</Text>\n    this.displayContent(content, \"Welcome\");\n    request()\n    .then(res => {\n      const content = <Text>{'Connecting to API ... Done'}</Text>\n      if (res.ok) this.displayContent(content, \"Welcome\");\n    }).catch(err => {\n      const content = <Text>{`Connecting to API ... Error\\n${err}`}</Text>\n      this.displayContent(content, \"Error\");\n    })\n  }\n\n  displayContent = (arg, type) => {\n    this.setState({content: arg, contentType: type});\n  }\n\n  render() {\n    return (\n      <View style={styles.container}>\n        <ScrollView style={styles.content}>\n          <View>\n              <Text style={styles.contentHeader}>{this.state.contentType}</Text>\n          </View>\n          {this.state.content}\n        </ScrollView>\n        <View style={styles.menu}>\n          <ArtistButton updateDisplay={this.displayContent}/>\n          <SongsButton updateDisplay={this.displayContent}/>\n          <AlbumButton updateDisplay={this.displayContent}/>\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    justifyContent: 'space-between',\n  },\n\n  content: {\n    marginBottom: '20%'\n  },\n\n  menu: {\n    height: '10%',\n    position: 'fixed',\n    bottom: 0,\n    flexDirection: 'row',\n    backgroundColor: 'grey',\n    width: '100%',\n    justifyContent: 'space-around',\n    alignItems: 'center'\n  },\n\n  contentHeader: {\n    textAlign: 'center',\n    color: 'white',\n    backgroundColor: '#8496f8',\n    paddingTop: '1rem',\n    paddingBottom: '1rem',\n    fontSize: '3rem'\n  }\n});\n\nexport default App;\n"],"sourceRoot":""}