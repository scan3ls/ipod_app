{"version":3,"sources":["src/util.js","src/songsButton.js","src/content.js","src/albumButton.js","src/artistButton.js","App.js"],"names":["request","params","url","base_url","includes","fetch","SongsButton","props","handlePress","bind","then","res","json","data","text","Songs","forEach","song","name","artist","album","updateDisplay","catch","err","console","log","TouchableOpacity","onPress","this","style","Text","React","Component","Content","AlbumButton","Albums","songs","map","join","ArtistButton","Artists","albums","App","displayContent","arg","setState","content","state","View","styles","container","ScrollView","menu","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","margin","marginBottom","height","position","bottom","flexDirection","width"],"mappings":"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","file":"static/js/app.dd5542ca.chunk.js","sourcesContent":["function request(params) {\n    const base_url = 'https://salty-oasis-19252.herokuapp.com';\n    // const base_url = 'http://127.0.0.1:5000/';\n    const endpoints = ['albums', 'artists', 'songs'];\n    let url;\n\n    if (endpoints.includes(params)) url = `${base_url}/${params}`;\n    else  url = base_url;\n\n    const promise = fetch(url);\n\n    return promise;\n}\n\nexport default request;\n","import React from 'react';\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native';\nimport request from './util';\n\nclass SongsButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handlePress = this.handlePress.bind(this);\n    }\n\n    handlePress() {\n        const response = request('songs');\n        response\n        .then(res => res.json())\n        .then(data => {\n          let text = \"\";\n          data.Songs.forEach(\n            (song) => {\n                text += `${song.name} - ${song.artist} - ${song.album}\\n`;\n          });\n          this.props.updateDisplay(text);\n        })\n        .catch(err => {\n            console.log(err)\n            this.props.updateDisplay('Something went wrong');\n        });\n    }\n\n    render() {\n        return (\n            <TouchableOpacity\n              onPress={this.handlePress}\n              style={{}}>\n                <Text>Songs</Text>\n            </TouchableOpacity>\n        );\n    }\n}\n\nexport default SongsButton;\n","import React from 'react';\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native';\n\n\nclass Content extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <Text>{this.props.data}</Text>\n        );\n    }\n}\n\nexport default Content;\n","import React from 'react';\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native';\nimport request from './util';\n\nclass AlbumButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handlePress = this.handlePress.bind(this);\n    }\n\n    handlePress() {\n        const response = request('albums');\n        response\n        .then(res => res.json())\n        .then(data => {\n          let text = \"\";\n          data.Albums.forEach(\n            (album) => {\n                text += `${album.artist}\\n${album.name}\\nSongs: [\\n ${album.songs.map((song) => `\\t${song}\\n`).join('')}]\\n\\n`\n          });\n          this.props.updateDisplay(text);\n        })\n        .catch(err => {\n            console.log(err)\n            this.props.updateDisplay('Something went wrong');\n        });\n    }\n\n    render() {\n        return (\n            <TouchableOpacity\n              onPress={this.handlePress}\n              style={{}}>\n                <Text>Albums</Text>\n            </TouchableOpacity>\n        );\n    }\n}\n\nexport default AlbumButton;\n","import React from 'react';\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native';\nimport request from './util';\n\nclass ArtistButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handlePress = this.handlePress.bind(this);\n    }\n\n    handlePress() {\n        const response = request('artists');\n        response\n        .then(res => res.json())\n        .then(data => {\n          let text = \"\";\n          data.Artists.forEach(\n            (artist) => {\n                text += `${artist.name}\\nAlbums [\\n${artist.albums.map((album) => `\\t${album}\\n`).join('')}]\\n\\n`;\n          });\n          this.props.updateDisplay(text);\n        })\n        .catch(err => {\n            console.log(err)\n            this.props.updateDisplay('Something went wrong');\n        });\n    }\n\n    render() {\n        return (\n            <TouchableOpacity\n              onPress={this.handlePress}\n              style={{}}>\n                <Text>Artists</Text>\n            </TouchableOpacity>\n        );\n    }\n}\n\nexport default ArtistButton;\n","import { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { StyleSheet, Text, View, TouchableOpacity, ScrollView } from 'react-native';\nimport SongsButton from './src/songsButton';\nimport Conent from './src/content';\nimport request from './src/util';\nimport AlbumButton from './src/albumButton';\nimport ArtistButton from './src/artistButton';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n      content: \"hello\"\n    };\n  }\n\n  componentDidMount() {\n    // const response = request('albums');\n    this.displayContent('Welcome');\n  }\n\n  displayContent = (arg) => {\n    this.setState({content: arg});\n  }\n\n  render() {\n    return (\n      <View style={styles.container}>\n        <ScrollView style={styles.content}>\n          <Conent data={this.state.content} />\n        </ScrollView>\n        <View style={styles.menu}>\n          <SongsButton updateDisplay={this.displayContent}/>\n          <AlbumButton updateDisplay={this.displayContent}/>\n          <ArtistButton updateDisplay={this.displayContent}/>\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    margin: '1rem'\n  },\n  content: {\n    marginBottom: '10%'\n  },\n  menu: {\n    height: '10%',\n    position: 'fixed',\n    bottom: 0,\n    flexDirection: 'row',\n    backgroundColor: 'grey',\n    width: '100%',\n    justifyContent: 'space-around',\n    alignItems: 'center'\n  }\n});\n\nexport default App;\n"],"sourceRoot":""}